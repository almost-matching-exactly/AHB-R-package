% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AHB_MIP_match.R
\name{AHB_MIP_match}
\alias{AHB_MIP_match}
\title{A MIP Implementation of AHB Matching}
\usage{
AHB_MIP_match(
  data,
  holdout = 0.1,
  treated_column_name = "treated",
  outcome_column_name = "outcome",
  black_box = "BART",
  cv = F,
  gamma0 = 3,
  gamma1 = 3,
  beta = 2,
  m = 1,
  M = 1e+05,
  n_prune = ifelse(is.numeric(holdout), round(0.1 * (1 - holdout) * nrow(data)),
    round(0.1 * nrow(data))),
  MIP_solver = "Rcplex"
)
}
\arguments{
\item{data}{Either a data frame or a path to a .csv file to be read. If
holdout is not a numeric value, this is the data to be matched. If holdout
is a numeric scalar between 0 and 1, that proportion of data will be made
into a holdout set and only the remaining proportion of data will be
matched. Covariates can either be categorical, continuous or mixed
(categorical and continuous). Outcome must be either binary or continuous
(both numeric) with name \code{outcome_column_name} . Treatment must be
described by a logical or binary column with name
\code{treated_column_name}.}

\item{holdout}{A data frame, a path to a .csv file to be read or a numeric
scalar between 0 and 1 .  If a numeric scalar, that proportion of data will
be made into a holdout set and only the remaining proportion of data will be
matched. Otherwise, a dataframe or a path to a .csv file. Must have the same
column names and order as data. This data will not be matched. Covariates
can either be categorical, continuous or mixed (categorical and
continuous).Outcome must be either binary or continuous (both numeric) with
name \code{outcome_column_name} . Treatment must be described by a logical
or binary column with name \code{treated_column_name}.}

\item{treated_column_name}{A character with the name of the treatment column
in data and holdout. Defaults to 'treated'.}

\item{outcome_column_name}{A character with the name of the outcome column in
holdout and also in data, if supplied in the latter. Defaults to 'outcome'.}

\item{black_box}{Denotes the method to be used to generate outcome model Y. If
"BART" and cv = F, uses \code{dbarts::bart} with keeptrees = TRUE, keepevery
= 10, verbose = FALSE, k = 2 and ntree =200 and then the default predict
method to estimate the outcome. If "BART" and cv = T, k and ntree will be
best values from cross validation. Defaults to 'BART'. There will be
multiple choices about black_box in the future.}

\item{cv}{A logical scalar. If \code{TURE}, do cross-validation on the train
set to generate outcome model Y . Defaults to \code{TRUE}.}

\item{gamma0}{A numeric value, one of hyperparameters in global MIP that
controls the weight placed on the outcome function portion of the loss.
Defaults to 3.}

\item{gamma1}{A numeric value, one of hyperparameters in global MIP that
controls the weight placed on the outcome function portion of the loss.
Defaults to 3.}

\item{beta}{A numeric value, one of hyperparameters in global MIP that
controls the weight placed on the number of units in the box. Defaults to 2.}

\item{m}{A numeric value, the at least number of control units that the box
contains when estimating causal effects for a single treatment unit.
Defaults to 1.}

\item{M}{A numeric value, a large positive constant that controls the weight
placed on decision variable wij, which is an indicator for whether a unit is
in the box.Defaults to 1e5.}

\item{n_prune}{A numeric value, the number of candidate units selected to run
the mip on for constructing the box. Dataset mentioned below is refered to
the dataset for matching. If you match a small dataset with the number of
units smaller than 400, it will run MIP on all dataset for each treated
unit. If you match larger dataset and your memory of your computer cannot
support such much computation, plase adjust n_prune below 400 or even
smaller. The smaller number of candidate units selected to run the mip on
for constructing the box, the faster this program runs.Defualt n_prune =
0.1* nrow(dataset).}

\item{MIP_solver}{Denotes the method to be used to solve MIP problem.
Optional, if "Rcplex", use Rcplex as solver, which is faster than Rglpk.
if "Rglpk", use Rglpk as solver, which is free and easy to be installed.}
}
\value{
The basic object returned by \code{AHB_MIP_match} is a list of 5
 entries: \describe{\item{data}{Data set was matched by \code{AHB_MIP_match}.
 If holdout is not a numeric value, the \code{AHB_MIP_out$data} is the same
 as the data input into \code{AHB_MIP_match}.  If holdout is a numeric scalar
 between 0 and 1, \code{AHB_MIP_out$data} is the remaining proportion of data
 that were matched.} \item{units_id}{A integer vector with unit_id for test
 treated units} \item{CATE}{A numeric vector with the conditional average
 treatment effect estimates for every test treated unit in its matched group
 in \code{MGs}} \item{bins}{ An array of two lists where the first one
 contains lower bounds and the other contains upper bounds for each test
 treated unit. Each row of each list is a vector corresponding to a test
 treated unit.} \item{MGs}{A list of all the matched groups formed by
 AHB_fast_match. For each test treated unit, each row contains all unit_id of
 the other units that fall into its box, including itself. } }
}
\description{
\code{AHB_MIP_match} runs a MIP Implementation of AHB Matching
}
\section{Introduction}{
 \code{AHB_MIP_match} is a matching algorithm that
 matches units with others in unit-specific, hyper-box-shaped regions of the
 covariate space.These regions are large enough that many matches are created
 for each unit and small enough that the treatment effect is roughly constant
 throughout. The regions are found as the solution to using a Mixed Integer
 Program algorithm. For more details, please see the AHB paper
 \href{https://arxiv.org/pdf/2003.01805.pdf}{here}.
}

