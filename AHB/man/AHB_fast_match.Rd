% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AHB_fast_match.R
\name{AHB_fast_match}
\alias{AHB_fast_match}
\title{A Fast Approximate Implementation of AHB Matching}
\usage{
AHB_fast_match(
  data,
  holdout = 0.1,
  treated_column_name = "treated",
  outcome_column_name = "outcome",
  black_box = "xgb",
  cv = F,
  C = 1.1,
  n_prune = ifelse(is.numeric(holdout), round(0.1 * (1 - holdout) * nrow(data)),
    round(0.1 * nrow(data)))
)
}
\arguments{
\item{data}{Either a data frame or a path to a .csv file to be read. If
holdout is not a numeric value, this is the data to be matched. If holdout
is a numeric scalar between 0 and 1, that proportion of data will be made
into a holdout set and only the remaining proportion of data will be
matched. Covariates can either be categorical, continuous or mixed
(categorical and continuous). Outcome must be either binary or continuous
(both numeric) with name \code{outcome_column_name} . Treatment must be
described by a logical or binary column with name
\code{treated_column_name}.}

\item{holdout}{A data frame, a path to a .csv file to be read or a numeric
scalar between 0 and 1 .  If a numeric scalar, that proportion of data will be
made into a holdout set and only the remaining proportion of data will be
matched. Otherwise, a dataframe or a path to a .csv file. Must have the same
column names and order as data. This data will not be matched. Covariates
can either be categorical, continuous or mixed (categorical and
continuous).Outcome must be either binary or continuous (both numeric) with
name \code{outcome_column_name} . Treatment must be described by a logical
or binary column with name \code{treated_column_name}.}

\item{treated_column_name}{A character with the name of the treatment column
in data and holdout. Defaults to 'treated'.}

\item{outcome_column_name}{A character with the name of the outcome column in
holdout and also in data, if supplied in the latter. Defaults to 'outcome'.}

\item{black_box}{Denotes the method to be used to generate outcome model Y.
If "BART", use bartMachine as ML model to do prediction.
If "xgb, use xgboost as ML model to do prediction.
 Defaults to "xgb".}

\item{cv}{A logical scalar. If \code{TURE}, do cross-validation on the train
set to generate outcome model Y . Defaults to \code{TRUE}.}

\item{C}{A positive scalar. Determines the stopping condition for Fast AHB.
When the variance in a newly expanded region exceeds C times the variance in
the previous expansion region, the algorithm stops. Thus, higher C
encourages coarser bins while lower C encourages finer ones. The user should
analyze the data with multiple values of C to see how robust results are to
its choice.}

\item{n_prune}{A numeric value, the number of candidate units selected to
construct the box. Defualt n_prune = 50.}
}
\value{
The basic object returned by \code{AHB_fast_match} is a list of 5
 entries: \describe{\item{data}{Data set was matched by
 \code{AHB_fast_match}. If holdout is not a numeric value, the
 \code{AHB_fast_out$data} is the same as the data input into
 \code{AHB_fast_match}.  If holdout is a numeric scalar between 0 and 1,
 \code{AHB_fast_out$data} is the remaining proportion of data that were
 matched.} \item{units_id}{A integer vector with unit_id for test treated
 units} \item{CATE}{A numeric vector with the conditional average treatment
 effect estimates for every test treated unit in its matched group in
 \code{MGs}} \item{bins}{ An array of two lists where the first one contains
 lower bounds and the other contains upper bounds for each test treated unit.
 Each row of each list is a vector corresponding to a test treated unit.}
 \item{MGs}{A list of all the matched groups formed by AHB_fast_match. For
 each test treated unit, each row contains all unit_id of the other units
 that fall into its box, including itself. } }
}
\description{
\code{AHB_fast_match} runs a (fast) approximate implementation of AHB Matching
}
\section{Introduction}{
 \code{AHB_fast_match} is a matching algorithm that
 matches units with others in unit-specific, hyper-box-shaped regions of the
 covariate space.These regions are large enough that many matches are created
 for each unit and small enough that the treatment effect is roughly constant
 throughout. The regions are found as the solution to using a (fast)
 approximation algorithm. For more details, please see the AHB paper
 \href{https://arxiv.org/pdf/2003.01805.pdf}{here}.
}

